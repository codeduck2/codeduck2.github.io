//归并排序
//L表示开始下标,R表示结束下标
void mergesort(int arr[],int L,int R)
{
	  if(L==R) return;
	  else
	  {
		    mergesort(arr,L,(L+R)/2);
		    mergesort(arr,(L+R)/2+1,R);
		    merge(arr,L,R);
	  }
}

void merge(int arr[],int L,int R)
{
	  int M=(L+R)/2;
	  int LEFT_SIZE=M-L+1,RIGHT_SIZE=R-M;

	  int *left=(int *)malloc( sizeof(int)*LEFT_SIZE );
	  int *right=(int *)malloc( sizeof(int)*RIGHT_SIZE );
	  int i=0,j=0,k=L;

	  while(i<LEFT_SIZE)    //填充左边数组
	  {
		    left[i]=arr[L+i];
		    i++;
	  }

	  while(j<RIGHT_SIZE)  //填充右边数组
	  {
		    right[j]=arr[M+1+j];
		    j++;
	  }
	  //填充arr[]数组
	  i=0;
	  j=0;
	  while(i<LEFT_SIZE && j<RIGHT_SIZE)
	  {         ////从大到小排序:写>,从小到大排序:写<
		    if(left[i]>right[j])  arr[k++]=left[i++];
		    else   arr[k++]=right[j++];
	  }

	  while(i<LEFT_SIZE)  arr[k++]=left[i++];


	  while(j<RIGHT_SIZE)  arr[k++]=right[j++];
	  //及时释放动态内存
	  free(left);
	  free(right);
}